[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2023-06-26T11:26:48.873Z",
        "before": [
          {
            "result": {
              "duration": 394641300,
              "status": "passed"
            },
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.setup()"
            }
          }
        ],
        "line": 67,
        "name": "[BE] Check correct processing of severity in quality investigation",
        "description": "",
        "id": "⭐[be]-user-select-severity-for-quality-investigation;[be]-check-correct-processing-of-severity-in-quality-investigation;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1998700,
              "status": "passed"
            },
            "line": 38,
            "name": "I am logged into TRACE_X_A application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_A",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.IllegalArgumentException: path cannot be null\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)\r\n\tat io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:217)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1643)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:577)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1331)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1086)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1006)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:789)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:577)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1331)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1086)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1006)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:789)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.Authentication.obtainAccessToken(Authentication.java:58)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.RestProvider.getRequestSpecification(RestProvider.java:180)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.RestProvider.createInvestigation(RestProvider.java:107)\r\n\tat org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCreateQualityInvestigation(TraceabilityTestStepDefinition.java:78)\r\n\tat ✽.I create quality investigation(classpath:features/1_TRACEFOSS-1125.feature:39)\r\n",
              "duration": 374502000,
              "status": "failed"
            },
            "line": 39,
            "name": "I create quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCreateQualityInvestigation(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"MINOR\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"MINOR\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              },
              {
                "cells": [
                  "\"status\"",
                  "\"CREATED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I approve quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iApproveQualityInvestigation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"SENT\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I am logged into TRACE_X_B application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_B",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I check, if quality investigation has been received",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCanSeeNotificationWasReceived()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"MINOR\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              },
              {
                "cells": [
                  "\"status\"",
                  "\"RECEIVED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I acknowledge quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAcknowledgeQualityInvestigation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"ACKNOWLEDGED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I am logged into TRACE_X_A application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_A",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"ACKNOWLEDGED\""
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TRACEFOSS-1125"
          },
          {
            "name": "@TRACEFOSS-1220"
          },
          {
            "name": "@TRACEFOSS-1138"
          },
          {
            "name": "@TRACEFOSS-1673"
          },
          {
            "name": "@TRACEFOSS-1139"
          },
          {
            "name": "@TRACEFOSS-1101"
          },
          {
            "name": "@INTEGRATION_TEST"
          }
        ]
      },
      {
        "start_timestamp": "2023-06-26T11:26:49.674Z",
        "before": [
          {
            "result": {
              "duration": 997500,
              "status": "passed"
            },
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.setup()"
            }
          }
        ],
        "line": 68,
        "name": "[BE] Check correct processing of severity in quality investigation",
        "description": "",
        "id": "⭐[be]-user-select-severity-for-quality-investigation;[be]-check-correct-processing-of-severity-in-quality-investigation;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 38,
            "name": "I am logged into TRACE_X_A application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_A",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.IllegalArgumentException: path cannot be null\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)\r\n\tat io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1643)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:577)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1331)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1086)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1006)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:789)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:577)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1331)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1086)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1006)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:789)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.Authentication.obtainAccessToken(Authentication.java:58)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.RestProvider.getRequestSpecification(RestProvider.java:180)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.RestProvider.createInvestigation(RestProvider.java:107)\r\n\tat org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCreateQualityInvestigation(TraceabilityTestStepDefinition.java:78)\r\n\tat ✽.I create quality investigation(classpath:features/1_TRACEFOSS-1125.feature:39)\r\n",
              "duration": 3997500,
              "status": "failed"
            },
            "line": 39,
            "name": "I create quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCreateQualityInvestigation(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"MAJOR\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"MAJOR\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              },
              {
                "cells": [
                  "\"status\"",
                  "\"CREATED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I approve quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iApproveQualityInvestigation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"SENT\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I am logged into TRACE_X_B application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_B",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I check, if quality investigation has been received",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCanSeeNotificationWasReceived()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"MAJOR\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              },
              {
                "cells": [
                  "\"status\"",
                  "\"RECEIVED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I acknowledge quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAcknowledgeQualityInvestigation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"ACKNOWLEDGED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I am logged into TRACE_X_A application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_A",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"ACKNOWLEDGED\""
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TRACEFOSS-1125"
          },
          {
            "name": "@TRACEFOSS-1220"
          },
          {
            "name": "@TRACEFOSS-1138"
          },
          {
            "name": "@TRACEFOSS-1673"
          },
          {
            "name": "@TRACEFOSS-1139"
          },
          {
            "name": "@TRACEFOSS-1101"
          },
          {
            "name": "@INTEGRATION_TEST"
          }
        ]
      },
      {
        "start_timestamp": "2023-06-26T11:26:49.687Z",
        "before": [
          {
            "result": {
              "duration": 998600,
              "status": "passed"
            },
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.setup()"
            }
          }
        ],
        "line": 69,
        "name": "[BE] Check correct processing of severity in quality investigation",
        "description": "",
        "id": "⭐[be]-user-select-severity-for-quality-investigation;[be]-check-correct-processing-of-severity-in-quality-investigation;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 38,
            "name": "I am logged into TRACE_X_A application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_A",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.IllegalArgumentException: path cannot be null\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)\r\n\tat io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1643)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:577)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1331)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1086)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1006)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:789)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:577)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1331)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1086)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1006)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:789)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.Authentication.obtainAccessToken(Authentication.java:58)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.RestProvider.getRequestSpecification(RestProvider.java:180)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.RestProvider.createInvestigation(RestProvider.java:107)\r\n\tat org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCreateQualityInvestigation(TraceabilityTestStepDefinition.java:78)\r\n\tat ✽.I create quality investigation(classpath:features/1_TRACEFOSS-1125.feature:39)\r\n",
              "duration": 3996900,
              "status": "failed"
            },
            "line": 39,
            "name": "I create quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCreateQualityInvestigation(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"CRITICAL\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 997300,
              "status": "skipped"
            },
            "line": 43,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"CRITICAL\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              },
              {
                "cells": [
                  "\"status\"",
                  "\"CREATED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I approve quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iApproveQualityInvestigation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"SENT\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I am logged into TRACE_X_B application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_B",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I check, if quality investigation has been received",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCanSeeNotificationWasReceived()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"CRITICAL\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              },
              {
                "cells": [
                  "\"status\"",
                  "\"RECEIVED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I acknowledge quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAcknowledgeQualityInvestigation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"ACKNOWLEDGED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I am logged into TRACE_X_A application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_A",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"ACKNOWLEDGED\""
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TRACEFOSS-1125"
          },
          {
            "name": "@TRACEFOSS-1220"
          },
          {
            "name": "@TRACEFOSS-1138"
          },
          {
            "name": "@TRACEFOSS-1673"
          },
          {
            "name": "@TRACEFOSS-1139"
          },
          {
            "name": "@TRACEFOSS-1101"
          },
          {
            "name": "@INTEGRATION_TEST"
          }
        ]
      },
      {
        "start_timestamp": "2023-06-26T11:26:49.701Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.setup()"
            }
          }
        ],
        "line": 70,
        "name": "[BE] Check correct processing of severity in quality investigation",
        "description": "",
        "id": "⭐[be]-user-select-severity-for-quality-investigation;[be]-check-correct-processing-of-severity-in-quality-investigation;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 38,
            "name": "I am logged into TRACE_X_A application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_A",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.IllegalArgumentException: path cannot be null\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)\r\n\tat io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1643)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:577)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1331)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1086)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1006)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:789)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:577)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1331)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1086)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1006)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:789)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.Authentication.obtainAccessToken(Authentication.java:58)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.RestProvider.getRequestSpecification(RestProvider.java:180)\r\n\tat org.eclipse.tractusx.traceability.test.tooling.rest.RestProvider.createInvestigation(RestProvider.java:107)\r\n\tat org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCreateQualityInvestigation(TraceabilityTestStepDefinition.java:78)\r\n\tat ✽.I create quality investigation(classpath:features/1_TRACEFOSS-1125.feature:39)\r\n",
              "duration": 3540500,
              "status": "failed"
            },
            "line": 39,
            "name": "I create quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCreateQualityInvestigation(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"LIFE-THREATENING\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"LIFE-THREATENING\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              },
              {
                "cells": [
                  "\"status\"",
                  "\"CREATED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I approve quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iApproveQualityInvestigation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"SENT\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I am logged into TRACE_X_B application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_B",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I check, if quality investigation has been received",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCanSeeNotificationWasReceived()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"severity\"",
                  "\"LIFE-THREATENING\""
                ]
              },
              {
                "cells": [
                  "\"description\"",
                  "\"Hello\""
                ]
              },
              {
                "cells": [
                  "\"targetDate\"",
                  "\"2099-03-11T22:44:06.333827Z\""
                ]
              },
              {
                "cells": [
                  "\"status\"",
                  "\"RECEIVED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I acknowledge quality investigation",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAcknowledgeQualityInvestigation()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"ACKNOWLEDGED\""
                ]
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I am logged into TRACE_X_A application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_A",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I check, if quality investigation has proper values",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iCheckIfQualityInvestigationHasProperValues(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "\"status\"",
                  "\"ACKNOWLEDGED\""
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TRACEFOSS-1125"
          },
          {
            "name": "@TRACEFOSS-1220"
          },
          {
            "name": "@TRACEFOSS-1138"
          },
          {
            "name": "@TRACEFOSS-1673"
          },
          {
            "name": "@TRACEFOSS-1139"
          },
          {
            "name": "@TRACEFOSS-1101"
          },
          {
            "name": "@INTEGRATION_TEST"
          }
        ]
      }
    ],
    "name": "⭐[BE] User select severity for Quality Investigation",
    "description": "",
    "id": "⭐[be]-user-select-severity-for-quality-investigation",
    "keyword": "Feature",
    "uri": "classpath:features/1_TRACEFOSS-1125.feature",
    "tags": [
      {
        "name": "@TRACEFOSS-1125",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2023-06-26T11:26:49.712Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.setup()"
            }
          }
        ],
        "line": 6,
        "name": "CLONE - Test Cucumber Test Story",
        "description": "",
        "id": "❓trace-x-cucumber-test-story;clone---test-cucumber-test-story",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1003600,
              "status": "passed"
            },
            "line": 7,
            "name": "I have entered 1 into the calculator",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 15
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TestStepDefinition.iHaveEnteredIntoTheCalculator(java.lang.Integer)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "I have entered 2 into the calculator",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 15
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TestStepDefinition.iHaveEnteredIntoTheCalculator(java.lang.Integer)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "I press add",
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TestStepDefinition.iPressAdd()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 51102600,
              "status": "passed"
            },
            "line": 10,
            "name": "the result should be 3 on the screen",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 21
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TestStepDefinition.theResultShouldBeOnTheScreen(java.lang.Integer)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TRACEFOSS-1282"
          },
          {
            "name": "@TRACEFOSS-1283"
          },
          {
            "name": "@INTEGRATION_TEST"
          }
        ]
      }
    ],
    "name": "❓Trace-X Cucumber Test Story",
    "description": "",
    "id": "❓trace-x-cucumber-test-story",
    "keyword": "Feature",
    "uri": "classpath:features/1_TRACEFOSS-1282.feature",
    "tags": [
      {
        "name": "@TRACEFOSS-1282",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-06-26T11:26:49.808Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.setup()"
            }
          }
        ],
        "line": 5,
        "name": "Send Investigation Flow Cucumber Test",
        "description": "",
        "id": "investigation-notification;send-investigation-flow-cucumber-test",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "I am logged into TRACE_X_A application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_A",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 7,
            "name": "I create investigation",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "I send investigation",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "I am logged into TRACE_X_B application",
            "match": {
              "arguments": [
                {
                  "val": "TRACE_X_B",
                  "offset": 17
                }
              ],
              "location": "org.eclipse.tractusx.traceability.test.TraceabilityTestStepDefinition.iAmLoggedIntoApplication(org.eclipse.tractusx.traceability.test.tooling.TraceXEnvironmentEnum)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "I wait for transfer",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "I can see notification was received",
            "match": {},
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TRACEFOSS-1516"
          },
          {
            "name": "@INTEGRATION_TEST"
          }
        ]
      }
    ],
    "name": "Investigation notification",
    "description": "",
    "id": "investigation-notification",
    "keyword": "Feature",
    "uri": "classpath:features/1_Test-investigation.feature",
    "tags": []
  }
]
