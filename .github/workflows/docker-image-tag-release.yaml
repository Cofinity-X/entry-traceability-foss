name: Release Frontend&Backend on Tag

on:
  workflow_dispatch:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

env:
  TAG_NAME: "${{ github.ref_name }}"
  REGISTRY: ghcr.io
  JAVA_VERSION: 17
  COMMIT_SHA: ${{ github.sha }}
  DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}

jobs:
  Release-docker-image-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        if: env.DOCKER_HUB_USER == ''
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ env.REGISTRY }}/${{ github.repository }}-frontend:${{ env.TAG_NAME }} and :latest
        uses: docker/build-push-action@v4
        if: env.DOCKER_HUB_USER == ''
        with:
          context: frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}-frontend:${{ env.TAG_NAME }}, ${{ env.REGISTRY }}/${{ github.repository }}-frontend:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        env:
          DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
          if: env.DOCKER_HUB_USER != ''


      - name: Build and push ${{ env.REGISTRY }}/${{ github.repository }}-frontend:${{ env.TAG_NAME }} and :latest
        uses: docker/build-push-action@v4
        if: env.DOCKER_HUB_USER != ''
        with:
          context: frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}-frontend:${{ env.TAG_NAME }}, ${{ env.REGISTRY }}/${{ github.repository }}-frontend:latest

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        env:
          DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
          IMAGE_NAMESPACE: tractusx
          IMAGE_NAME: traceability-foss
        if: env.DOCKER_HUB_USER != ''
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          repository: ${{ env.IMAGE_NAMESPACE }}/${{ env.IMAGE_NAME }}

  Release-docker-image-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tx-backend
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Login to Docker Registry
        if: env.DOCKER_HUB_USER == ''
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push docker image for GHCR ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.TAG_NAME }}
        if: env.DOCKER_HUB_USER == ''
        run: mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn --batch-mode -DskipTests=true install jib:build -Dimage=${{ env.REGISTRY }}/${{ github.repository }} -Djib.to.tags=${{ env.TAG_NAME }},latest

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        if: env.DOCKER_HUB_USER != ''
        env:
          DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}

      - name: Build & push docker image for Docker Hub ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.TAG_NAME }}
        if: env.DOCKER_HUB_USER != ''
        run: mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn --batch-mode -DskipTests=true install jib:build -Dimage=${{ env.IMAGE_NAMESPACE }}/traceability-foss -Djib.to.tags=${{ env.TAG_NAME }},latest

      # https://github.com/peter-evans/dockerhub-description
      - name: Update Docker Hub description
        env:
          DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
          IMAGE_NAMESPACE: tractusx
          IMAGE_NAME: traceability-foss
        if: env.DOCKER_HUB_USER != ''
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          repository: ${{ env.IMAGE_NAMESPACE }}/${{ env.IMAGE_NAME }}
