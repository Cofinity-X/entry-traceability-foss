name: "[CFX][BE][FE][SECURITY] Trivy Image Scan"

on:
  workflow_dispatch: # Trigger manually
  schedule:
    - cron: '0 1 * * *' # Run daily at 01:00

jobs:
  trivy-latest-image-scan:
    strategy:
      fail-fast: false # Prevents the workflow from stopping when a job fails
      matrix:
        config:
          - image_name: "traceability-foss"
          - image_name: "traceability-foss-frontend"
         # TODO enable cfx frontend image build once the image can be built
         # - image_name: "cfx-traceability-foss-frontend"
    permissions:
      actions: read
      security-events: write
      id-token: write
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    name: Scan latest image
    uses: Cofinity-X/central-pipelines/.github/workflows/reusable-trivy-acr-latest-image-scan.yaml@main
    with:
      environment: "lower-env-acr"
      image-namespace: "trace-x/traceability-foss/images"
      image-name: "${{ matrix.config.image_name }}"

  analyze-config:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0  # v0.29.0
        with:
          trivyignores: "./.github/workflows/.trivyignore"
          scan-type: "config"
          hide-progress: false
          format: "sarif"
          output: "trivy-config-results.sarif"
          severity: "CRITICAL,HIGH"
          timeout: "10m0s"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@f09c1c0a94de965c15400f5634aa42fac8fb8f88  # v3.27.5
        if: always()
        with:
          sarif_file: "trivy-config-results.sarif"

