tractusx-connector:
  enabled: true
  controlplane:
    ingresses:
      - enabled: true
        hostname: "trace-x-edc-int-b.int.demo.catena-x.net"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - protocol
          - management
        tls:
          enabled: true
          secretName: tls-secret
    ssi:
      miw:
        url: <path:traceability-foss/data/int/edc/wallet#ssi.miw.url>
        authorityId: <path:traceability-foss/data/int/edc/wallet#ssi.miw.authorityId>
      oauth:
        tokenurl: <path:traceability-foss/data/int/edc/wallet#ssi.oauth.tokenurl>
        client:
          id: <path:traceability-foss/data/int/edc/wallet#ssi.oauth.client.id>
          secretAlias: edc-miw-keycloak-secret

  dataplane:
    ingresses:
      - enabled: true
        hostname: "trace-x-edc-int-b-dataplane.int.demo.catena-x.net"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - public
        className: "nginx"
        tls:
          enabled: true
          secretName: tls-secret

  backendService:
    httpProxyTokenReceiverUrl: "https://traceability-int-b.int.demo.catena-x.net/api/callback/endpoint-data-reference"

  postgresql:
    enabled: true
    auth:
      username: "<path:traceability-foss/data/int/edc/database#user>"
      password: "<path:traceability-foss/data/int/edc/database#password>"
    username: "<path:traceability-foss/data/int/edc/database#user>"
    password: "<path:traceability-foss/data/int/edc/database#password>"
    jdbcUrl: "jdbc:postgresql://tx-edc-provider-int-b-edc-postgresql-hl:5432/edc"

  vault:
    secretNames:
      transferProxyTokenSignerPrivateKey: token-signer-cert-key-dev
      transferProxyTokenSignerPublicKey: token-signer-cert-dev
      transferProxyTokenEncryptionAesKey: token-signer-aes-key
    endpoints:
      # -- default api for health checks, should not be added to any ingress
      default:
        port: 8080
        path: /api
      # -- data management api, used by internal users, can be added to an ingress and must not be internet facing
      management:
        port: 8081
        path: /management
        # -- authentication key, must be attached to each 'X-Api-Key' request header
        authKey: <path:traceability-foss/data/int/edc/controlplane#edc.api.control.auth.apikey.value>
      # -- control api, used for internal control calls. can be added to the internal ingress, but should probably not
      control:
        port: 8083
        path: /control
      # -- ids api, used for inter connector communication and must be internet facing
      protocol:
        port: 8084
        path: /api/v1/dsp
      # -- metrics api, used for application metrics, must not be internet facing
      metrics:
        port: 9090
        path: /metrics
      # -- observability api with unsecured access, must not be internet facing
      observability:
        port: 8085
        # -- observability api, provides /health /readiness and /liveness endpoints
        path: /observability
        # -- allow or disallow insecure access, i.e. access without authentication
        insecure: true
edc-postgresql:
  primary:
    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 100m
        memory: 4Gi
  enabled: true
  auth:
    database: edc
    username: <path:traceability-foss/data/int/edc/database#user>
    postgresPassword: <path:traceability-foss/data/int/edc/database#password>
    password: <path:traceability-foss/data/int/edc/database#password>
